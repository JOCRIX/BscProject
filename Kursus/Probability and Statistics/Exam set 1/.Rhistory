library(mosaic) # load the mosaic package for later use
library(jpeg)
library(gridExtra)
library(png)
# was ![](https://asta.math.aau.dk/static-files/asta/img/mills.jpg)
url <- "https://asta.math.aau.dk/static-files/asta/img/mills.jpg"
z <- tempfile()
download.file(url, z, mode = "wb")
grid::grid.raster(jpeg::readJPEG(z))
invisible(file.remove(z))
# was ![](https://asta.math.aau.dk/static-files/asta/img/mills.jpg)
url <- "https://asta.math.aau.dk/static-files/asta/img/mills.jpg"
z <- tempfile()
download.file(url, z, mode = "wb")
grid::grid.raster(jpeg::readJPEG(z))
invisible(file.remove(z))
lambda <- 1
k <- 1
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
lambda <- 1
k <- 4
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
library("png")
pp <- readPNG("1.2.png")
plot.new()
rasterImage(pp,0,0,1,1)
speed<-read.delim("https://asta.math.aau.dk/datasets?file=windSpeed.txt",header=FALSE)[,1]
#hist(speed)
gf_histogram(~speed,bins=15)
n<-length(speed)
sortedSpeed<-sort(speed)
u<-log(sortedSpeed)
CDF<-(1:n)/n
v<-log(-log(1-CDF))
#gf_point(...~...) %>%gf_lm()
library(mosaic) # load the mosaic package for later use
library(jpeg)
library(gridExtra)
library(png)
# was ![](https://asta.math.aau.dk/static-files/asta/img/mills.jpg)
url <- "https://asta.math.aau.dk/static-files/asta/img/mills.jpg"
z <- tempfile()
download.file(url, z, mode = "wb")
grid::grid.raster(jpeg::readJPEG(z))
invisible(file.remove(z))
lambda <- 1
k <- 1
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
lambda <- 1
k <- 4
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
library("png")
pp <- readPNG("1.2.png")
plot.new()
rasterImage(pp,0,0,1,1)
speed<-read.delim("https://asta.math.aau.dk/datasets?file=windSpeed.txt",header=FALSE)[,1]
#hist(speed)
gf_histogram(~speed,bins=15)
n<-length(speed)
sortedSpeed<-sort(speed)
u<-log(sortedSpeed)
CDF<-(1:n)/n
v<-log(-log(1-CDF))
#gf_point(v ~ u)
plt1 <- plot(sortedSpeed)
plt2 <- plot(-log(1-CDF))
plt3 <- gf_point(-log(1-CDF) ~ sortedSpeed)
plt4 <- gf_point(v~u)%>%gf_lm()
grid.arrange(plt1, plt2, plt3, plt4, ncol = 2)
#gf_point(...~...) %>%gf_lm()
plt5 <- plotDist("weibull", params = list(shape = 1.78, scale = 4.876))
plt6 <- gf_dhistogram( ~ speed, bins = 20)
grid.arrange(plt5, plt6, ncol = 2)
#%>%
#gf_dist("weibull", shape = ..., scale = ..., col = "red")
la <- 4.876
k <- 1.78
mu <- la*gamma(1+(1/k))
variance <- (la^2)*(gamma(1+2/k)-(gamma(1+1/k))^2)
STD <- sqrt(variance)
print(mu)
print(STD)
x<-rweibull(30, shape=k, scale = la )
n <- 30
xbar <- mean(x)
SEM_xbar = sd(x)/sqrt(n)
print(xbar)
print(SEM_xbar)
x_bar1 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar2 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar3 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar4 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
hist1 <- gf_dhistogram( ~ x_bar, bins = 25)
hist2 <- gf_dhistogram( ~ x_bar, bins = 25)
hist3 <- gf_dhistogram( ~ x_bar, bins = 25)
hist4 <- gf_dhistogram( ~ x_bar, bins = 25)
grid.arrange(hist1, hist2, hist3, hist4, ncol = 2)
library(mosaic) # load the mosaic package for later use
library(jpeg)
library(gridExtra)
library(png)
# was ![](https://asta.math.aau.dk/static-files/asta/img/mills.jpg)
url <- "https://asta.math.aau.dk/static-files/asta/img/mills.jpg"
z <- tempfile()
download.file(url, z, mode = "wb")
grid::grid.raster(jpeg::readJPEG(z))
invisible(file.remove(z))
lambda <- 1
k <- 1
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
lambda <- 1
k <- 4
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
library("png")
pp <- readPNG("1.2.png")
plot.new()
rasterImage(pp,0,0,1,1)
speed<-read.delim("https://asta.math.aau.dk/datasets?file=windSpeed.txt",header=FALSE)[,1]
#hist(speed)
gf_histogram(~speed,bins=15)
n<-length(speed)
sortedSpeed<-sort(speed)
u<-log(sortedSpeed)
CDF<-(1:n)/n
v<-log(-log(1-CDF))
#gf_point(v ~ u)
plt1 <- plot(sortedSpeed)
plt2 <- plot(-log(1-CDF))
plt3 <- gf_point(-log(1-CDF) ~ sortedSpeed)
plt4 <- gf_point(v~u)%>%gf_lm()
grid.arrange(plt1, plt2, plt3, plt4, ncol = 2)
#gf_point(...~...) %>%gf_lm()
plt5 <- plotDist("weibull", params = list(shape = 1.78, scale = 4.876))
plt6 <- gf_dhistogram( ~ speed, bins = 20)
grid.arrange(plt5, plt6, ncol = 2)
#%>%
#gf_dist("weibull", shape = ..., scale = ..., col = "red")
la <- 4.876
k <- 1.78
mu <- la*gamma(1+(1/k))
variance <- (la^2)*(gamma(1+2/k)-(gamma(1+1/k))^2)
STD <- sqrt(variance)
print(mu)
print(STD)
x<-rweibull(30, shape=k, scale = la )
n <- 30
xbar <- mean(x)
SEM_xbar = sd(x)/sqrt(n)
print(xbar)
print(SEM_xbar)
x_bar1 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar2 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar3 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar4 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
hist1 <- gf_dhistogram( ~ x_bar, bins = 25)
hist2 <- gf_dhistogram( ~ x_bar, bins = 25)
hist3 <- gf_dhistogram( ~ x_bar, bins = 25)
hist4 <- gf_dhistogram( ~ x_bar, bins = 25)
grid.arrange(hist1, hist2, hist3, hist4, ncol = 2)
library(mosaic) # load the mosaic package for later use
library(jpeg)
library(gridExtra)
library(png)
# was ![](https://asta.math.aau.dk/static-files/asta/img/mills.jpg)
url <- "https://asta.math.aau.dk/static-files/asta/img/mills.jpg"
z <- tempfile()
download.file(url, z, mode = "wb")
grid::grid.raster(jpeg::readJPEG(z))
invisible(file.remove(z))
lambda <- 1
k <- 1
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
lambda <- 1
k <- 4
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
library("png")
pp <- readPNG("1.2.png")
plot.new()
rasterImage(pp,0,0,1,1)
speed<-read.delim("https://asta.math.aau.dk/datasets?file=windSpeed.txt",header=FALSE)[,1]
#hist(speed)
gf_histogram(~speed,bins=15)
n<-length(speed)
sortedSpeed<-sort(speed)
u<-log(sortedSpeed)
CDF<-(1:n)/n
v<-log(-log(1-CDF))
#gf_point(v ~ u)
plt1 <- plot(sortedSpeed)
plt2 <- plot(-log(1-CDF))
plt3 <- gf_point(-log(1-CDF) ~ sortedSpeed)
plt4 <- gf_point(v~u)%>%gf_lm()
grid.arrange(plt1, plt2, plt3, plt4, ncol = 2)
#gf_point(...~...) %>%gf_lm()
plt5 <- plotDist("weibull", params = list(shape = 1.78, scale = 4.876))
plt6 <- gf_dhistogram( ~ speed, bins = 20)
grid.arrange(plt5, plt6, ncol = 2)
#%>%
#gf_dist("weibull", shape = ..., scale = ..., col = "red")
la <- 4.876
k <- 1.78
mu <- la*gamma(1+(1/k))
variance <- (la^2)*(gamma(1+2/k)-(gamma(1+1/k))^2)
STD <- sqrt(variance)
print(mu)
print(STD)
x<-rweibull(30, shape=k, scale = la )
n <- 30
xbar <- mean(x)
SEM_xbar = sd(x)/sqrt(n)
print(xbar)
print(SEM_xbar)
x_bar1 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar2 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar3 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar4 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
hist1 <- gf_dhistogram( ~ x_bar, bins = 25)
hist2 <- gf_dhistogram( ~ x_bar, bins = 25)
hist3 <- gf_dhistogram( ~ x_bar, bins = 25)
hist4 <- gf_dhistogram( ~ x_bar, bins = 25)
# grid.arrange(hist1, hist2, hist3, hist4, ncol = 2)
mean(x_bar1)
mean(x_bar2)
mean(x_bar3)
mean(x_bar4)
sd(x_bar1)
sd(x_bar2)
sd(x_bar3)
sd(x_bar4)
qqnorm(x_bar1)
qqline(x_bar1)
library(mosaic) # load the mosaic package for later use
library(jpeg)
library(gridExtra)
library(png)
# was ![](https://asta.math.aau.dk/static-files/asta/img/mills.jpg)
url <- "https://asta.math.aau.dk/static-files/asta/img/mills.jpg"
z <- tempfile()
download.file(url, z, mode = "wb")
grid::grid.raster(jpeg::readJPEG(z))
invisible(file.remove(z))
lambda <- 1
k <- 1
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
lambda <- 1
k <- 4
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
library("png")
pp <- readPNG("1.2.png")
plot.new()
rasterImage(pp,0,0,1,1)
speed<-read.delim("https://asta.math.aau.dk/datasets?file=windSpeed.txt",header=FALSE)[,1]
#hist(speed)
gf_histogram(~speed,bins=15)
library("png")
pp <- readPNG("2.4.png")
plot.new()
rasterImage(pp,0,0,1,1)
library("png")
pp <- readPNG("2.4.2.png")
plot.new()
rasterImage(pp,0,0,1,1)
n<-length(speed)
sortedSpeed<-sort(speed)
u<-log(sortedSpeed)
CDF<-(1:n)/n
v<-log(-log(1-CDF))
gf_point(v~u) %>%gf_lm()
library("png")
pp <- readPNG("2.4.3.png")
plot.new()
rasterImage(pp,0,0,1,1)
k1 <- 1.78
lambda1  <- 4.876
w5 <- gf_dhistogram( ~ speed, bins = 25) #%>%
w6 <- gf_dist("weibull", shape = k1, scale = lambda1, col = "red")
grid.arrange(w5,w6, ncol = 2)
#The values we found are
k <- 1.78
lambda <- 4.876
#For mean we get
u = lambda * gamma(1+(1/k))
#mu = 4.339
print(u)
#For variance we get
o_squared =  lambda^2 *(gamma(1+(2/k)) -(gamma(1+(1/k)))^2)
#Variance is 6.348
#Standard deviation will be
o = sqrt(o_squared)
#Standard deviation is 2.520
#We generate the 30 samples with the found k and lambda values
k <- 1.78
lambda <- 4.876
#Generate random samples with rweibull()
x<-rweibull(30, shape=k, scale =lambda )
#We calculate the mean/expected value of the random variable. It is also xbar = (1/n)*sum(xi) for i = 1..n
x_bar <- mean(x)
print(x_bar)
S_squared <- var(x)
print(S_squared)
S <- sd(x)
print(S)
n <- 30
SEM = S/sqrt(n)
print(SEM)
#We had the follow k and lambda
k=1.78
lambda = 4.876
#We generate 500 samples, calculate the mean and save the value in x_bar
x_bar <- replicate(500, mean(rweibull(30, shape=k, scale = lambda) ))
x_bar1 <- replicate(500, mean(rweibull(30, shape=k, scale = lambda) ))
x_bar2 <- replicate(500, mean(rweibull(30, shape=k, scale = lambda) ))
x_bar3 <- replicate(500, mean(rweibull(30, shape=k, scale = lambda) ))
x_bar4 <- replicate(500, mean(rweibull(30, shape=k, scale = lambda) ))
hist1 <- gf_dhistogram( ~ x_bar, bins = 25)
hist2 <- gf_dhistogram( ~ x_bar, bins = 25)
hist3 <- gf_dhistogram( ~ x_bar, bins = 25)
hist4 <- gf_dhistogram( ~ x_bar, bins = 25)
grid.arrange(hist1, hist2, hist3, hist4, ncol = 2)
#We find the mean of 500 samples
mu_xbar1 <- mean(x_bar1)
print(mu_xbar1)
sd_xbar1 <- sd(x_bar1)
print(sd_xbar1)
#We find the standard error of the mean of the 500 samples
SEM_xbar1 <- sd(x_bar1)/sqrt(500)
print(SEM_xbar1)
#We plot the values of x_Bar1
qqnorm(x_bar1)
qqline(x_bar1)
a <- (4.75-4.4)/(1-0)
print(a)
