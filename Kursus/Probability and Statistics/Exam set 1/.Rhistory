library(mosaic) # load the mosaic package for later use
library(jpeg)
library(gridExtra)
library(png)
# was ![](https://asta.math.aau.dk/static-files/asta/img/mills.jpg)
url <- "https://asta.math.aau.dk/static-files/asta/img/mills.jpg"
z <- tempfile()
download.file(url, z, mode = "wb")
grid::grid.raster(jpeg::readJPEG(z))
invisible(file.remove(z))
# was ![](https://asta.math.aau.dk/static-files/asta/img/mills.jpg)
url <- "https://asta.math.aau.dk/static-files/asta/img/mills.jpg"
z <- tempfile()
download.file(url, z, mode = "wb")
grid::grid.raster(jpeg::readJPEG(z))
invisible(file.remove(z))
lambda <- 1
k <- 1
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
lambda <- 1
k <- 4
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
library("png")
pp <- readPNG("1.2.png")
plot.new()
rasterImage(pp,0,0,1,1)
speed<-read.delim("https://asta.math.aau.dk/datasets?file=windSpeed.txt",header=FALSE)[,1]
#hist(speed)
gf_histogram(~speed,bins=15)
n<-length(speed)
sortedSpeed<-sort(speed)
u<-log(sortedSpeed)
CDF<-(1:n)/n
v<-log(-log(1-CDF))
#gf_point(...~...) %>%gf_lm()
library(mosaic) # load the mosaic package for later use
library(jpeg)
library(gridExtra)
library(png)
# was ![](https://asta.math.aau.dk/static-files/asta/img/mills.jpg)
url <- "https://asta.math.aau.dk/static-files/asta/img/mills.jpg"
z <- tempfile()
download.file(url, z, mode = "wb")
grid::grid.raster(jpeg::readJPEG(z))
invisible(file.remove(z))
lambda <- 1
k <- 1
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
k <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
lambda <- 1
k <- 4
w1 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 2
w2 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <-5
w3 <- plotDist("weibull", params = list(shape = k, scale = lambda))
lambda <- 10
w4 <- plotDist("weibull", params = list(shape = k, scale = lambda))
grid.arrange(w1, w2, w3, w4, ncol = 2)
library("png")
pp <- readPNG("1.2.png")
plot.new()
rasterImage(pp,0,0,1,1)
speed<-read.delim("https://asta.math.aau.dk/datasets?file=windSpeed.txt",header=FALSE)[,1]
#hist(speed)
gf_histogram(~speed,bins=15)
n<-length(speed)
sortedSpeed<-sort(speed)
u<-log(sortedSpeed)
CDF<-(1:n)/n
v<-log(-log(1-CDF))
#gf_point(v ~ u)
plt1 <- plot(sortedSpeed)
plt2 <- plot(-log(1-CDF))
plt3 <- gf_point(-log(1-CDF) ~ sortedSpeed)
plt4 <- gf_point(v~u)%>%gf_lm()
grid.arrange(plt1, plt2, plt3, plt4, ncol = 2)
#gf_point(...~...) %>%gf_lm()
plt5 <- plotDist("weibull", params = list(shape = 1.78, scale = 4.876))
plt6 <- gf_dhistogram( ~ speed, bins = 20)
grid.arrange(plt5, plt6, ncol = 2)
#%>%
#gf_dist("weibull", shape = ..., scale = ..., col = "red")
la <- 4.876
k <- 1.78
mu <- la*gamma(1+(1/k))
variance <- (la^2)*(gamma(1+2/k)-(gamma(1+1/k))^2)
STD <- sqrt(variance)
print(mu)
print(STD)
x<-rweibull(30, shape=k, scale = la )
n <- 30
xbar <- mean(x)
SEM_xbar = sd(x)/sqrt(n)
print(xbar)
print(SEM_xbar)
x_bar1 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar2 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar3 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
x_bar4 <- replicate(500, mean(rweibull(30, shape=k, scale = la) ))
hist1 <- gf_dhistogram( ~ x_bar, bins = 25)
hist2 <- gf_dhistogram( ~ x_bar, bins = 25)
hist3 <- gf_dhistogram( ~ x_bar, bins = 25)
hist4 <- gf_dhistogram( ~ x_bar, bins = 25)
grid.arrange(hist1, hist2, hist3, hist4, ncol = 2)
